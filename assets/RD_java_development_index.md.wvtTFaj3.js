import{_ as a,c as t,o as e,a4 as s}from"./chunks/framework.4aTu-Nia.js";const l="/assets/image.BqPldu7U.png",r="/assets/image-1.mpWbFxT7.png",i="/assets/image-2.oQNmnKdf.png",n="/assets/image-3.DwNGTWge.png",o="/assets/image-4.DWwcAVX9.png",p="/assets/image-5.mXR-rOY-.png",c="/assets/image-6.xbWA57pR.png",m="/assets/image-7.DDkuUKcQ.png",d="/assets/image-8.BfU00ZHJ.png",g="/assets/image-9.Blm8v1AV.png",h="/assets/image-10.d46XxkKi.png",w=JSON.parse('{"title":"开发提效","description":"","frontmatter":{},"headers":[],"relativePath":"RD/java/development/index.md","filePath":"RD/java/development/index.md"}'),_={name:"RD/java/development/index.md"},x=s('<h1 id="开发提效" tabindex="-1">开发提效 <a class="header-anchor" href="#开发提效" aria-label="Permalink to &quot;开发提效&quot;">​</a></h1><h3 id="xml" tabindex="-1">XML <a class="header-anchor" href="#xml" aria-label="Permalink to &quot;XML&quot;">​</a></h3><h3 id="jdbc" tabindex="-1">JDBC <a class="header-anchor" href="#jdbc" aria-label="Permalink to &quot;JDBC&quot;">​</a></h3><p><img src="'+l+'" alt="alt text" data-fancybox="gallery"></p><p><img src="'+r+'" alt="alt text" data-fancybox="gallery"></p><p>（）增删改 <img src="'+i+'" alt="alt text" data-fancybox="gallery"></p><p>（）查询</p><p><img src="'+n+'" alt="alt text" data-fancybox="gallery"></p><h2 id="maven" tabindex="-1">Maven <a class="header-anchor" href="#maven" aria-label="Permalink to &quot;Maven&quot;">​</a></h2><p><img src="'+o+'" alt="alt text" data-fancybox="gallery"></p><p><img src="'+p+'" alt="alt text" data-fancybox="gallery"></p><p><img src="'+c+'" alt="alt text" data-fancybox="gallery"></p><p><img src="'+m+'" alt="alt text" data-fancybox="gallery"></p><h3 id="常用配置" tabindex="-1">常用配置 <a class="header-anchor" href="#常用配置" aria-label="Permalink to &quot;常用配置&quot;">​</a></h3><ul><li><p>本地仓库</p></li><li><p>镜像仓库</p></li><li><p>配置 jdk</p></li></ul><h3 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h3><p>idea 集成 maven</p><p><img src="'+d+'" alt="alt text" data-fancybox="gallery"></p><h2 id="mybatis" tabindex="-1">MyBatis <a class="header-anchor" href="#mybatis" aria-label="Permalink to &quot;MyBatis&quot;">​</a></h2><p>文档：<a href="https://mybatis.org/mybatis-3/zh_CN/index.html" target="_blank" rel="noreferrer">https://mybatis.org/mybatis-3/zh_CN/index.html</a></p><p>参考：<a href="https://www.cnblogs.com/gnwzj/p/10663407.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/gnwzj/p/10663407.html</a></p><p><img src="'+g+'" alt="alt text" data-fancybox="gallery"></p><p>持久层是分层开发中专门负责访问数据源的一层，Java 项目中每一层都有自己的作用，持久层的作用就是访问数据源，把访问数据源的代码和业务逻辑代码分开，有利于后期维护和团队分工开发。同时也增加了数据访问代码的复用性。</p><p>ORM(Object/Relation Mapping)，中文名称:对象/关系 映射。是一种解决数据库发展和面向对象编程语言发展不匹配问题而出现的技术。</p><p><img src="'+h+'" alt="alt text" data-fancybox="gallery"></p>',25),b=[x];function f(y,u,q,v,k,P){return e(),t("div",null,b)}const j=a(_,[["render",f]]);export{w as __pageData,j as default};
