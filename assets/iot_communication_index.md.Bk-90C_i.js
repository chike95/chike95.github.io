import{_ as t,c as l,o as e,a4 as i}from"./chunks/framework.4aTu-Nia.js";const b=JSON.parse('{"title":"通信原理","description":"","frontmatter":{},"headers":[],"relativePath":"iot/communication/index.md","filePath":"iot/communication/index.md"}'),a={name:"iot/communication/index.md"},d=i('<h1 id="通信原理" tabindex="-1">通信原理 <a class="header-anchor" href="#通信原理" aria-label="Permalink to &quot;通信原理&quot;">​</a></h1><h3 id="modbus" tabindex="-1">ModBus <a class="header-anchor" href="#modbus" aria-label="Permalink to &quot;ModBus&quot;">​</a></h3><p>ModBus 是工业领域标准通信协议，1979 年由莫迪康开发的应用层报文传输协议，包括 ASCII、RTU、TCP 等。TCP 和 RTU 比 ASCII 常见，其中 TCP 的使用频率更高一些。</p><h4 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h4><p>MODBUS 是 OSI 模型第 7 层上的应用层报文传输协议，它在连接至不同类型总线或网络的设备之间提供客户机/服务器通信。</p><p>MODBUS 支持主从通信模式（Master-Slave），是一个请求/应答协议，并且提供功能码规定的服务。MODBUS 功能码是 MODBUS 请求/应答 PDU 的元素。</p><p>互联网组织能够使 TCP/IP 栈上的保留系统端口 502 访问 MODBUS。</p><h4 id="modbus-帧结构" tabindex="-1">Modbus 帧结构 <a class="header-anchor" href="#modbus-帧结构" aria-label="Permalink to &quot;Modbus 帧结构&quot;">​</a></h4><p>（1）地址域</p><ul><li>标识连接到网络上的从设备的地址。</li><li>地址范围从 1 到 247，0 用于广播。</li></ul><p>（2）功能码</p><ul><li>标识要执行的操作类型，如读、写等。</li></ul><p>（3）数据域</p><ul><li>包含具体的命令数据，如寄存器地址和数据值。</li><li>数据长度和格式取决于功能码和具体操作。</li></ul><p>（4）错误检查域</p><ul><li>用于检测数据传输中的错误。</li><li>Modbus RTU 使用 CRC（循环冗余校验），Modbus ASCII 使用 LRC（纵向冗余校验）。</li></ul><h4 id="modbus-rtu" tabindex="-1">Modbus RTU <a class="header-anchor" href="#modbus-rtu" aria-label="Permalink to &quot;Modbus RTU&quot;">​</a></h4><ul><li>数据格式：二进制</li><li>传输介质：RS-232、RS-485 等</li><li>帧结构：起始位、地址域、功能码、数据域、CRC 校验</li></ul><h4 id="modbus-tcp" tabindex="-1">Modbus TCP <a class="header-anchor" href="#modbus-tcp" aria-label="Permalink to &quot;Modbus TCP&quot;">​</a></h4><ul><li>数据格式：二进制</li><li>传输介质：以太网</li><li>帧结构：MBAP 报头、功能码、数据域</li></ul><h4 id="modbus-ascii" tabindex="-1">Modbus ASCII <a class="header-anchor" href="#modbus-ascii" aria-label="Permalink to &quot;Modbus ASCII&quot;">​</a></h4><ul><li>数据格式：ASCII 字符</li><li>传输介质：RS-232、RS-485 等</li><li>帧结构：起始字符、地址域、功能码、数据域、LRC 校验、结束字符</li></ul><h4 id="存储区-寄存器" tabindex="-1">存储区(寄存器) <a class="header-anchor" href="#存储区-寄存器" aria-label="Permalink to &quot;存储区(寄存器)&quot;">​</a></h4><table><thead><tr><th style="text-align:left;"><div><div class="table-header"><p>寄存器种类</p></div></div></th><th style="text-align:left;"><div><div class="table-header"><p>数据类型</p></div></div></th><th style="text-align:left;"><div><div class="table-header"><p>访问类型</p></div></div></th><th style="text-align:left;"><div><div class="table-header"><p>功能码</p></div></div></th></tr></thead><tbody><tr><td style="text-align:left;"><div><div class="table-cell"><p>线圈</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>位</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>读写</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>01H 05H 0FH</p></div></div></td></tr><tr><td style="text-align:left;"><div><div class="table-cell"><p>离散输入</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>位</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>读写(主站只读)</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>02H</p></div></div></td></tr><tr><td style="text-align:left;"><div><div class="table-cell"><p>保持寄存器</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>字</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>读写</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>04H</p></div></div></td></tr><tr><td style="text-align:left;"><div><div class="table-cell"><p>输入寄存器</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>字</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>读写(主站只读)</p></div></div></td><td style="text-align:left;"><div><div class="table-cell"><p>03H 06H 10H</p></div></div></td></tr></tbody></table><h4 id="功能码" tabindex="-1">功能码 <a class="header-anchor" href="#功能码" aria-label="Permalink to &quot;功能码&quot;">​</a></h4>',25),s=[d];function o(c,v,r,n,p,h){return e(),l("div",null,s)}const f=t(a,[["render",o]]);export{b as __pageData,f as default};
