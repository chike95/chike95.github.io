import{_ as a,c as e,o as i,a4 as l}from"./chunks/framework.4aTu-Nia.js";const t="/assets/jiagou.K3nA6EHe.png",b=JSON.parse('{"title":"一、项目分析","description":"","frontmatter":{},"headers":[],"relativePath":"RD/node/koa/koa2-sina-01.md","filePath":"RD/node/koa/koa2-sina-01.md"}'),o={name:"RD/node/koa/koa2-sina-01.md"},r=l('<h1 id="一、项目分析" tabindex="-1">一、项目分析 <a class="header-anchor" href="#一、项目分析" aria-label="Permalink to &quot;一、项目分析&quot;">​</a></h1><p>如果去饭店吃饭，不可能找厨师点菜吧？小工负责食材存取，洗菜切肉；厨师负责烹饪；跑堂负责接待食客并与后厨沟通。这就是精典的分层体现。如果一个厨师既负责跑堂，又负责烹饪。那这个饭店的管理一定非常混乱吧。小工就是 DAO，从食材库里（数据源）取出食材（原始数据），进行简单处理（数据对象化）。厨师就是 Service，找到小工（DAO），获取各种半成品（对象化数据），加工成顾客需要的菜肴（最终数据）。跑堂就是 Controller，负责接单（提交数据）上菜（响应数据），是顾客与后厨间的媒介（提供用户与后台程序的接口）。各司其职（高内聚），轻松协作（低耦合），就是分层思想的目标。</p><p>作者：齐天大朕 链接：<a href="https://www.zhihu.com/question/431911268/answer/1596354422" target="_blank" rel="noreferrer">https://www.zhihu.com/question/431911268/answer/1596354422</a> 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h2 id="_1-1-项目背景" tabindex="-1">1.1 项目背景 <a class="header-anchor" href="#_1-1-项目背景" aria-label="Permalink to &quot;1.1 项目背景&quot;">​</a></h2><p>实战：从零模拟新浪微博</p><p>Node.js-Koa2 框架生态实战－从零模拟新浪微博</p><p>“双越”老师出品，纯实战的 Node.js 进阶课程</p><p>地址：<a href="https://coding.imooc.com/class/388.html" target="_blank" rel="noreferrer">https://coding.imooc.com/class/388.html</a></p><p>代码：<a href="https://gitee.com/biaoquanli/koa2-weibo/tree/main" target="_blank" rel="noreferrer">https://gitee.com/biaoquanli/koa2-weibo/tree/main</a></p><p>课程涉及的知识点</p><h2 id="_1-1-项目架构" tabindex="-1">1.1 项目架构 <a class="header-anchor" href="#_1-1-项目架构" aria-label="Permalink to &quot;1.1 项目架构&quot;">​</a></h2><p><img src="'+t+`" alt="Alt text" data-fancybox="gallery"></p><h2 id="_1-2-课程安排" tabindex="-1">1.2 课程安排 <a class="header-anchor" href="#_1-2-课程安排" aria-label="Permalink to &quot;1.2 课程安排&quot;">​</a></h2><p>主要包含六个方面的内容：</p><pre><code>技术选型

知识点串讲

技术方案设计

功能开发

线上环境

总结最佳实践
</code></pre><h3 id="_1-2-1-技术选型" tabindex="-1">1.2.1 技术选型 <a class="header-anchor" href="#_1-2-1-技术选型" aria-label="Permalink to &quot;1.2.1 技术选型&quot;">​</a></h3><ul><li><p>框架</p></li><li><p>存储和缓存</p></li><li><p>用户认证</p></li></ul><h3 id="_1-2-2-知识点串讲" tabindex="-1">1.2.2 知识点串讲 <a class="header-anchor" href="#_1-2-2-知识点串讲" aria-label="Permalink to &quot;1.2.2 知识点串讲&quot;">​</a></h3><ul><li><p>koa2 和 ejs 模板</p></li><li><p>mysql 和 sequelize</p></li><li><p>redis</p></li><li><p>session 和 jwt</p></li><li><p>jest 单元测试</p></li><li><p>eslint 和 inspect debug</p></li></ul><h3 id="_1-2-3-技术方案设计" tabindex="-1">1.2.3 技术方案设计 <a class="header-anchor" href="#_1-2-3-技术方案设计" aria-label="Permalink to &quot;1.2.3 技术方案设计&quot;">​</a></h3><p>第四章：技术方案设计</p><ul><li><p>架构设计</p></li><li><p>页面（模板和路由）和 API</p></li><li><p>数据表和存储模型</p></li><li><p>其它：@ 功能和图片上传</p></li></ul><h3 id="_1-2-4-功能开发" tabindex="-1">1.2.4 功能开发 <a class="header-anchor" href="#_1-2-4-功能开发" aria-label="Permalink to &quot;1.2.4 功能开发&quot;">​</a></h3><ul><li><p>用户：登录、注册、用户设置、粉丝和关注</p></li><li><p>微博：发布、列表（首页、个人主页、广场页）</p></li><li><p>@ 功能： @某人、回复、接受@我的消息</p></li></ul><h3 id="_1-2-5-线上环境" tabindex="-1">1.2.5 线上环境 <a class="header-anchor" href="#_1-2-5-线上环境" aria-label="Permalink to &quot;1.2.5 线上环境&quot;">​</a></h3><ul><li><p>pm2 和多线程</p></li><li><p>nginx 和反向代理</p></li><li><p>日志</p></li></ul><h3 id="_1-2-6-总结最佳实践" tabindex="-1">1.2.6 总结最佳实践 <a class="header-anchor" href="#_1-2-6-总结最佳实践" aria-label="Permalink to &quot;1.2.6 总结最佳实践&quot;">​</a></h3><ul><li><p>项目结构</p></li><li><p>错误处理</p></li><li><p>代码风格</p></li><li><p>质量保证</p></li><li><p>安全</p></li><li><p>线上环境</p></li></ul>`,28),p=[r];function n(s,h,c,d,_,u){return i(),e("div",null,p)}const q=a(o,[["render",n]]);export{b as __pageData,q as default};
